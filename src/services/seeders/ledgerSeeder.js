// seedLedgers.js
async function seedLedgers(sequelize, userCompanyId) {
  // fetch all groups for mapping
  const allGroups = await sequelize.query(
    'SELECT id, group_name AS "groupName", parent_group_id AS "parentGroupId" FROM groups WHERE company_id = :userCompanyId',
    {
      replacements: { userCompanyId },
      type: sequelize.QueryTypes.SELECT,
    }
  );

  // build group lookup map
  const groupMap = {};
  allGroups.forEach((group) => {
    if (!groupMap[group.groupName]) groupMap[group.groupName] = [];
    groupMap[group.groupName].push(group);
  });

  function getGroupId(groupName, parentGroupName = null) {
    const groups = groupMap[groupName];
    if (!groups) return null;
    if (parentGroupName) {
      const parentGroups = groupMap[parentGroupName] || [];
      for (const group of groups) {
        if (parentGroups.some((pg) => pg.id === group.parentGroupId)) {
          return group.id;
        }
      }
      return groups[0].id;
    }
    return groups[0].id;
  }

  const now = new Date();
  const baseLedgers = [
    {
      ledgerName: "Capital Account",
      acgroup: getGroupId("Capital Account"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 1,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Drawings",
      acgroup: getGroupId("Capital Account"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 2,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Cash",
      acgroup: getGroupId("Cash-in-Hand"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 3,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Bank Account",
      acgroup: getGroupId("Bank Accounts"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
        "address",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 4,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Sales",
      acgroup: getGroupId("Sales Accounts"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 5,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Purchase",
      acgroup: getGroupId("Purchase Accounts"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 6,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Salaries",
      acgroup: getGroupId("Indirect Expense"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 7,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Rent Paid",
      acgroup: getGroupId("Indirect Expense"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 8,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Telephone Expenses",
      acgroup: getGroupId("Indirect Expense"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 9,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Electricity Charges",
      acgroup: getGroupId("Indirect Expense"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 10,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Commission Received",
      acgroup: getGroupId("Indirect Income"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 11,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Discount Received",
      acgroup: getGroupId("Indirect Income"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 12,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "CGST Input",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 13,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "SGST Input",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 14,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "IGST Input",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 15,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "CGST Input (RCM)",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 16,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "SGST Input (RCM)",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 17,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "IGST Input (RCM)",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 18,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "CGST Output",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 19,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "SGST Output",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 20,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "IGST Output",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 21,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Sundry Debtors",
      acgroup: getGroupId("Sundry Debtors"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
        "address",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 22,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Sundry Creditors",
      acgroup: getGroupId("Sundry Creditors"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
        "address",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 23,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Sales Return",
      acgroup: getGroupId("Sales Accounts"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 24,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Purchase Return",
      acgroup: getGroupId("Purchase Accounts"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 25,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Loan from Bank",
      acgroup: getGroupId("Secured Loans"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 26,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Loan from Friends",
      acgroup: getGroupId("Unsecured Loans"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 27,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Depreciation",
      acgroup: getGroupId("Indirect Expense"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 28,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Income Tax",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 29,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "TDS Receivable",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 30,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "TDS Payable",
      acgroup: getGroupId("Duties & Taxes"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 31,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Advance to Staff",
      acgroup: getGroupId("Loans & Advances (Asset)"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
        "address",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 32,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Interest Received",
      acgroup: getGroupId("Indirect Income"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 33,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Interest Paid",
      acgroup: getGroupId("Indirect Expense"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Debit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 34,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
    {
      ledgerName: "Rounding Off",
      acgroup: getGroupId("Indirect Income"),
      isDefault: true,
      isEditable: true,
      isDeletable: false,
      editableFields: JSON.stringify([
        "openingBalance",
        "balanceType",
        "description",
      ]),
      openingBalance: 0.0,
      balance: 0.0,
      balanceType: "Credit",
      isActive: true,
      status: "Active",
      isDefault: true,
      sortOrder: 35,
      createdAt: new Date(),
      updatedAt: new Date(),
    },
  ];

  const defaultLedgers = baseLedgers.map((ledger) => ({
    ...ledger,
    companyId: userCompanyId,
    editableFields: JSON.stringify(ledger.editableFields),
    isActive: true,
    status: "Active",
    createdAt: now,
    updatedAt: now,
  }));
  const validLedgers = defaultLedgers.filter((ledger) => ledger.acgroup);
  if (validLedgers.length > 0) {
    await sequelize.getQueryInterface().bulkInsert("ledgers", validLedgers, {});
    console.log(
      `🌱 Seeded ${validLedgers.length} ledgers for company ${userCompanyId}`
    );
  } else {
    console.warn("⚠️ No valid ledgers to insert (group mapping failed)");
  }
}

module.exports = seedLedgers;
